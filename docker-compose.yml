version: "3.8"

services:
    mongo:
        image: mongo:6.0
        container_name: mongo-v4
        restart: always
        ports:
            - "27017:27017"
        volumes:
            - ./mongo-data:/data/db
            - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
        networks:
            - trending_news

    spark-master:
        build:
            context: .
            dockerfile: spark.Dockerfile
        container_name: spark-master-v4
        environment:
            - SPARK_MODE=master
            - SPARK_RPC_AUTHENTICATION_ENABLED=no
            - SPARK_RPC_ENCRYPTION_ENABLED=no
            - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
            - SPARK_SSL_ENABLED=no
            - MONGO_URI=mongodb://mongo:27017
        ports:
            - "8080:8080"
            - "7077:7077"
        volumes:
            - ./data:/app/data
            - ./src:/app/src
        networks:
            - trending_news

    spark-worker:
        build:
            context: .
            dockerfile: spark.Dockerfile
        container_name: spark-worker-v4
        environment:
            - SPARK_MODE=worker
            - SPARK_MASTER_URL=spark://spark-master:7077
            - SPARK_WORKER_MEMORY=1G
            - SPARK_WORKER_CORES=1
            - MONGO_URI=mongodb://mongo:27017
        depends_on:
            - spark-master
        ports:
            - "8081:8081"
        volumes:
            - ./data:/app/data
            - ./src:/app/src
        networks:
            - trending_news

    jupyter:
        image: jupyter/pyspark-notebook
        container_name: spark-jupyter-v4
        ports:
            - "8888:8888"
        environment:
            - AWS_ACCESS_KEY_ID=minioadmin
            - AWS_SECRET_ACCESS_KEY=minioadmin
        volumes:
            - ./data:/home/jovyan/data
            - ./src:/home/jovyan/src
        networks:
            - trending_news

    elasticsearch:
        build:
            context: .
            dockerfile: Elasticsearch.Dockerfile
        container_name: elasticsearch-v4
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false
            - ES_JAVA_OPTS=-Xms1g -Xmx1g
        ports:
            - "9200:9200"
        volumes:
            - es-data:/usr/share/elasticsearch/data # ✅ đổi sang docker volume
        networks:
            - trending_news

    kibana:
        image: docker.elastic.co/kibana/kibana:8.15.0
        container_name: kibana-v4
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        ports:
            - "5601:5601"
        depends_on:
            - elasticsearch
        networks:
            - trending_news

    zookeeper:
        image: confluentinc/cp-zookeeper:7.6.1
        container_name: zookeeper-v4
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - "2181:2181"
        networks:
            - trending_news

    kafka:
        image: confluentinc/cp-kafka:7.6.1
        container_name: kafka-v4
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        volumes:
            - ./kafka-data:/var/lib/kafka/data
        networks:
            - trending_news

networks:
    trending_news:
        name: Trending-News
        driver: bridge

volumes:
    es-data:
